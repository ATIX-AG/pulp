From 25c56d955b81cf0c8a688c4bdf173cbde4fc220c Mon Sep 17 00:00:00 2001
From: Jeff Ortel <jortel@redhat.com>
Date: Fri, 8 May 2015 15:04:22 -0500
Subject: [PATCH] Fix #476, file descriptor leak in transport.qpid.Transport.

---
 kombu/tests/transport/test_qpid.py | 23 +++++++++++++++++++++++
 kombu/transport/qpid.py            | 11 +++++++++++
 2 files changed, 34 insertions(+)

diff --git a/kombu/tests/transport/test_qpid.py b/kombu/tests/transport/test_qpid.py
index 7ace243..3471c01 100644
--- a/kombu/tests/transport/test_qpid.py
+++ b/kombu/tests/transport/test_qpid.py
@@ -2023,3 +2023,26 @@ class TestTransport(ExtraAssertionsMixin, Case):
         my_transport = Transport(self.mock_client)
         result_params = my_transport.default_connection_params
         self.assertDictEqual(correct_params, result_params)
+
+    @patch('os.close')
+    def test_del(self, close):
+        my_transport = Transport(self.mock_client)
+        my_transport.__del__()
+        self.assertEqual(
+            close.call_args_list,
+            [
+                ((my_transport.r,), {}),
+                ((my_transport._w,), {}),
+            ])
+
+    @patch('os.close')
+    def test_del_failed(self, close):
+        close.side_effect = OSError()
+        my_transport = Transport(self.mock_client)
+        my_transport.__del__()
+        self.assertEqual(
+            close.call_args_list,
+            [
+                ((my_transport.r,), {}),
+                ((my_transport._w,), {}),
+            ])
diff --git a/kombu/transport/qpid.py b/kombu/transport/qpid.py
index fb240ad..5b065d8 100644
--- a/kombu/transport/qpid.py
+++ b/kombu/transport/qpid.py
@@ -1707,3 +1707,14 @@ class Transport(base.Transport):
         return {'userid': 'guest', 'password': '',
                 'port': self.default_port, 'virtual_host': '',
                 'hostname': 'localhost', 'sasl_mechanisms': 'PLAIN ANONYMOUS'}
+
+    def __del__(self):
+        """
+        Ensure file descriptors opened in __init__() are closed.
+        """
+        for fd in (self.r, self._w):
+            try:
+                os.close(fd)
+            except OSError:
+                # ignored
+                pass
-- 
1.9.3

