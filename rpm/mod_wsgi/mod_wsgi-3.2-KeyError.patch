# HG changeset patch
# User Graham.Dumpleton
# Date 1278899405 0
# Branch mod_wsgi-3.X
# Node ID ac74348931a5106600e0493aa17f9679ac366606
# Parent  c3b37a56fc58fe7a7ec3d3c144cc7d665a8d8939
Eliminate KeyError exception message on process shutdown when using Python
2.6.5+ and Python 3.1.2+. See issue #197.

diff --git a/mod_wsgi.c b/mod_wsgi.c
--- a/mod_wsgi.c
+++ b/mod_wsgi.c
@@ -5660,6 +5660,26 @@
     module = PyImport_ImportModule("atexit");
     Py_XDECREF(module);
 
+    /*
+     * In Python 2.6.5 and Python 3.1.2 the shutdown of
+     * threading was moved back into Py_Finalize() for the main
+     * Python interpreter. Because we shutting down threading
+     * ourselves, the second call results in errors being logged
+     * when Py_Finalize() is called and the shutdown function
+     * called a second time. The errors don't indicate any real
+     * problem and the threading module ignores them anyway.
+     * Whether we are using Python with this changed behaviour
+     * can only be checked by looking at run time version.
+     * Rather than try and add a dynamic check, create a fake
+     * 'dummy_threading' module as the presence of that shuts up
+     * the messages. It doesn't matter that the rest of the
+     * shutdown function still runs as everything is already
+     * stopped so doesn't do anything.
+     */
+
+    if (!PyImport_AddModule("dummy_threading"))
+        PyErr_Clear();
+
     Py_Finalize();
 
     wsgi_python_initialized = 0;
