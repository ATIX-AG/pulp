#!/usr/bin/python
#
# Copyright (c) 2010 Red Hat, Inc.
#
#
# This software is licensed to you under the GNU General Public License,
# version 2 (GPLv2). There is NO WARRANTY for this software, express or
# implied, including the implied warranties of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2
# along with this software; if not, see
# http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.
#
# Red Hat trademarks are not licensed under GPLv2. No permission is
# granted to use or replicate Red Hat trademarks that are incorporated
# in this software or its documentation.

import pulp.server.agent

class MockRepoProxy(object):
    '''
    Mock proxy to make calls against a consumer's repo service.
    '''

    def __init__(self, uuid, **options):
        self.bind_data = None
        self.unbind_repo_id = None
        self.update_calls = []

        self.uuid = uuid
        self.options = options

    def bind(self, repo_id, bind_data):
        self.repo_id = repo_id
        self.bind_data = bind_data

    def unbind(self, repo_id):
        self.unbind_repo_id = repo_id

    def update(self, repo_id, bind_data):
        self.update_calls.append((repo_id, bind_data))

    def clear(self):
        '''
        Removes all state from the mock. Meant to be run between test runs to ensure a
        common starting point.
        '''
        self.bind_data = None
        self.unbind_repo_id = None
        self.update_calls = []

class MockRepoProxyFactory(object):
    '''
    When activated, the repo proxy retrieval will return MockRepoProxy instances
    generated by this instance. The instance will store references to the mock proxies
    by uuid to simulate multiple consumers. The proxies used can then be retrieved
    to validate what data was sent to what proxy (i.e. which consumer).
    '''

    def __init__(self):
        self.proxies = {}

    def activate(self):
        '''
        Installs the current factory in the proxy retrieval hook. This will override
        any factories that have already been activated.
        '''

        pulp.server.agent.retrieve_repo_proxy = self.retrieve_mock_proxy

    def retrieve_mock_proxy(self, uuid, **options):
        '''
        Overrides the retrieve_proxy call to return a mock.
        '''

        if uuid not in self.proxies:
            self.proxies[uuid] = MockRepoProxy(uuid, **options)

        return self.proxies[uuid]

    def clear(self):
        '''
        Removes the cache of proxies used.
        '''
        self.proxies.clear()
