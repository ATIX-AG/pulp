# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# User specific aliases and functions

# Set up virtualenvwrapper
export WORKON_HOME=$HOME/.virtualenvs
export PIP_VIRTUALENV_BASE=$WORKON_HOME
export VIRTUALENV_USE_DISTRIBUTE=true
export PIP_RESPECT_VIRTUALENV=true
source /usr/bin/virtualenvwrapper.sh

pstart() {
    _paction start
}

pstop() {
    _paction stop
}

prestart() {
    _paction restart
}

pstatus() {
    _paction status
}

preset() {
    pstop;
    mongo pulp_database ~/drop_database.js;
    sudo rm -rf /var/lib/pulp/*;
    sudo -u apache pulp-manage-db;
    # If Crane is present, let's set up the publishing symlinks so that the app files can be used
    if [ -d $HOME/devel/crane ]; then
        pushd $HOME/devel/crane
        mkdir -p metadata/v1 metadata/v2
        sudo mkdir -p /var/lib/pulp/published/docker/v1 /var/lib/pulp/published/docker/v2
        sudo chown apache:apache /var/lib/pulp/published/docker/v1
        sudo chown apache:apache /var/lib/pulp/published/docker/v2
        sudo ln -s $HOME/devel/crane/metadata/v1 /var/lib/pulp/published/docker/v1/app
        sudo ln -s $HOME/devel/crane/metadata/v2 /var/lib/pulp/published/docker/v2/app
        popd
    fi
    pstart;
}

ptests() {
    pushd $HOME/devel;
    for r in {pulp,pulp_deb,pulp_docker,pulp_openstack,pulp_ostree,pulp_puppet,pulp_python,pulp_rpm}; do
        if [ -d $r ]; then
            pushd $r;
            workon $r;
            ./run-tests.py -x --enable-coverage;
            deactivate;
            popd;
        fi
    done;
    popd;
}

_paction() {

    for s in goferd httpd pulp_workers pulp_celerybeat pulp_resource_manager; do
        sudo systemctl $1 $s;
    done;
}

psmash() {
    workon pulp-smash;
    python -m unittest2 discover ~/devel/pulp-smash/pulp_smash;
    deactivate;
}

export DJANGO_SETTINGS_MODULE=pulp.server.webservices.settings
export CRANE_CONFIG_PATH=$HOME/devel/crane/crane.conf
